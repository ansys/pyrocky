name: CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION : '3.10'
  LIBRARY_NAME: 'ansys-rocky-core'
  DOCUMENTATION_CNAME: 'rocky.docs.pyansys.com'
  DOC_DEPLOYMENT_IMAGE_TAG: v24.1.0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: ansys/actions/code-style@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          vale-config: "doc/.vale.ini"
          vale-version: "2.29.6"
  
  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: Build and Smoke tests
    runs-on: ${{ matrix.os }}
    needs: style
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
        exclude:
          - should-release: false
            os: macos-latest
    steps:
      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@v5
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}


  tests:
    name: Tests
    runs-on: [self-hosted, Windows, pyrocky]
    timeout-minutes: 10
    env:
      ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }} # self-hosted has an issue with 3.11

      - name: "Test"
        run: |
          .venv/Scripts/activate.bat
          pytest

      - uses: codecov/codecov-action@v3
        name: 'Upload coverage to CodeCov'


  docs_build:
    name: Build Documentation
    runs-on: [self-hosted, Windows, pyrocky]
    env:
      ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}

    steps:
      - uses: actions/checkout@v4

      - name: "Install"
        run: |
          python -m venv .venv
          .venv/Scripts/activate.bat
          pip install -e .[dev]
          pip install msvc-runtime

      - name: Build Source Documentation
        run: |
          .venv/Scripts/activate.bat
          doc\make.bat html

      - name: Zip HTML Documentation before upload
        run: python doc\compress_doc.py HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}
          path: HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}.zip
          retention-days: 7


  doc-deploy-dev:
    name: "Deploy development documentation"
    # Deploy development only when merging or pushing to the 'main' branch
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: docs_build
    steps:
      - uses: ansys/actions/doc-deploy-dev@v4
        with:
          doc-artifact-name: 'HTML-Documentation-tag-${{ env.DOC_DEPLOYMENT_IMAGE_TAG }}'
          decompress-artifact: true
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}