from collections.abc import Sequence
from ansys.rocky.core._api_stubs.plugins10.plugins.api.api_element_item import ApiElementItem
from typing import List, Optional, Union

class RATranslation(ApiElementItem):
    @classmethod
    def GetWrappedClass(self): ...
    @classmethod
    def GetClassName(self): ...
    def GetAcceleration(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetAcceleration(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetInput(self) -> str: ...
    def SetInput(self, value: str) -> None: ...
    def GetValidInputValues(self) -> List[str]: ...
    def GetFinalVelocity(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetFinalVelocity(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetVelocity(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetVelocity(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
