from collections.abc import Sequence
from ansys.rocky.core._api_stubs.rocky30.plugins.api._ra_orientation_mixin import _RAOrientationMixin
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_base_geometry import RABaseGeometry as RABaseGeometry
from typing import List, Optional, Union

class RACircularSurface(RABaseGeometry, _RAOrientationMixin):
    @classmethod
    def GetWrappedClass(self) -> type[object]: ...
    @classmethod
    def GetClassName(self) -> str: ...
    def HasMotionFrame(self) -> bool: ...
    def GetCenter(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetCenter(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetMinRadius(self, unit: Optional[str] = ...) -> float: ...
    def SetMinRadius(self, value: Union[str, float], unit: Optional[str] = ...) -> None: ...
    def GetName(self) -> str: ...
    def SetName(self, value: str) -> None: ...
    def GetMaxRadius(self, unit: Optional[str] = ...) -> float: ...
    def SetMaxRadius(self, value: Union[str, float], unit: Optional[str] = ...) -> None: ...
