from coilib50.element_function.semantic_association import SemanticAssociation as SemanticAssociation
from coilib50.subject import Subject as Subject
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_mesh_coloring import ColorType as ColorType, RAMeshColoring as RAMeshColoring

class RAContactsDataMeshColoring:
    def __init__(self, id: str) -> None: ...
    def GetSubject(self) -> Subject: ...
    def SetVisible(self, value: bool) -> None: ...
    def GetVisible(self) -> bool: ...
    def GetValidColoringModes(self) -> list[str]: ...
    def GetAvailableGridFunctionsNames(self) -> set[str]: ...
    def GetAvailableGridFunctions(self) -> set[type['SemanticAssociation']]: ...
    def SetStride(self, value: int) -> None: ...
    def GetStride(self) -> int: ...
    def SetContactsVisible(self, value: bool) -> None: ...
    def GetContactsVisible(self) -> bool: ...
    def SetContactsColor(self, values: ColorType) -> None: ...
    def GetContactsColor(self) -> ColorType: ...
    def SetContactsProperty(self, value: Union[type['SemanticAssociation'], str, None]) -> None: ...
    def GetContactsProperty(self) -> Union[type['SemanticAssociation'], None]: ...
    def SetContactsPointSize(self, value: float) -> None: ...
    def GetContactsPointSize(self) -> float: ...
    def SetContactsNetworkVisible(self, value: bool) -> None: ...
    def GetContactsNetworkVisible(self) -> bool: ...
    def SetContactsNetworkColor(self, values: ColorType) -> None: ...
    def GetContactsNetworkColor(self) -> ColorType: ...
    def SetContactsNetworkProperty(self, value: Union[type['SemanticAssociation'], str, None]) -> None: ...
    def GetContactsNetworkProperty(self) -> Union[type['SemanticAssociation'], None]: ...
    def SetContactsNetworkLineWidth(self, value: float) -> None: ...
    def GetContactsNetworkLineWidth(self) -> float: ...
