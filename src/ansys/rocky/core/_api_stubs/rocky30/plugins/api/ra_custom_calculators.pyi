from _typeshed import Incomplete
from coilib50.element_function.semantic_association import SemanticAssociation as SemanticAssociation
from coilib50.units import IQuantity as IQuantity, Quantity as Quantity
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_api import RockyApiError as RockyApiError

VALID_TYPES: Incomplete
VALID_SCOPE: Incomplete

class RACustomCurveAndGridProperty:
    def AddCustomCurve(self, name: str, curve_type: str = ..., output_unit: str = ..., scope: str = ..., sources: Union[dict[str, str], None] = ..., expression: str = ...) -> None: ...
    def EditCustomCurve(self, edit_curve: str, new_name: Union[str, None] = ..., sources: Union[dict[str, str], None] = ..., expression: Union[str, None] = ...) -> None: ...
    def RemoveCustomCurve(self, name: str) -> None: ...
    def AddCustomProperty(self, name: str, property_type: str = ..., output_unit: str = ..., scope: str = ..., sources: Union[dict[str, str], None] = ..., expression: str = ...) -> None: ...
    def EditCustomProperty(self, edit_property: str, new_name: Union[str, None] = ..., sources: Union[dict[str, str], None] = ..., expression: Union[str, None] = ...) -> None: ...
    def RemoveCustomProperty(self, name: str) -> None: ...

class RACustomCurveParameters:
    variable_to_association_and_unit: Incomplete
    output_quantity: Incomplete
    domain_association: Incomplete
    def __init__(self, process: RACustomCurveAndGridProperty, sources: Union[dict[str, str], None] = ...) -> None: ...
