from collections.abc import Sequence
from ansys.rocky.core._api_stubs.plugins10.plugins.api.api_element_item import ApiElementItem
from ansys.rocky.core._api_stubs.rocky30.plugins.api.rocky_api_deprecated_decorator import ApiDeprecated as ApiDeprecated
from typing import List, Optional, Union

class RADomainSettings(ApiElementItem):
    @classmethod
    def GetWrappedClass(self): ...
    @classmethod
    def GetClassName(self) -> str: ...
    def CoordinateLimitsAtBoundaryLimits(self) -> bool: ...
    def GetCoordinateLimitsMinMax(self): ...
    def GetBoundariesDirections(self): ...
    def SetBoundariesDirections(self, value) -> None: ...
    def GetValidBoundariesDirectionsValues(self): ...
    def GetCoordinateLimitsMaxValues(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetCoordinateLimitsMaxValues(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetCoordinateLimitsMinValues(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetCoordinateLimitsMinValues(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetUseBoundaryLimits(self) -> bool: ...
    def SetUseBoundaryLimits(self, value: bool) -> None: ...
    def EnableUseBoundaryLimits(self) -> None: ...
    def DisableUseBoundaryLimits(self) -> None: ...
    def IsUseBoundaryLimitsEnabled(self) -> bool: ...
    def GetPeriodicLimitsMaxCoordinates(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetPeriodicLimitsMaxCoordinates(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetPeriodicLimitsMinCoordinates(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetPeriodicLimitsMinCoordinates(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetPeriodicAtGeometryLimits(self) -> bool: ...
    def SetPeriodicAtGeometryLimits(self, value: bool) -> None: ...
    def EnablePeriodicAtGeometryLimits(self) -> None: ...
    def DisablePeriodicAtGeometryLimits(self) -> None: ...
    def IsPeriodicAtGeometryLimitsEnabled(self) -> bool: ...
    def GetCartesianPeriodicDirections(self) -> str: ...
    def SetCartesianPeriodicDirections(self, value: str) -> None: ...
    def GetValidCartesianPeriodicDirectionsValues(self) -> List[str]: ...
    def GetInitialAngle(self, unit: Optional[str] = ...) -> float: ...
    def SetInitialAngle(self, value: Union[str, float], unit: Optional[str] = ...) -> None: ...
    def GetNumberOfDivisions(self) -> int: ...
    def SetNumberOfDivisions(self, value: Union[str, int]) -> None: ...
    def GetCylindricalPeriodicDirections(self) -> str: ...
    def SetCylindricalPeriodicDirections(self, value: str) -> None: ...
    def GetValidCylindricalPeriodicDirectionsValues(self) -> List[str]: ...
    def GetDomainType(self) -> str: ...
    def SetDomainType(self, value: str) -> None: ...
    def GetValidDomainTypeValues(self) -> List[str]: ...
