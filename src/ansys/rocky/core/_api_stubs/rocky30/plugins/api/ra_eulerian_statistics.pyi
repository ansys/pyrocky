from kraken20.plugins.api.ka_grid_function import KAGridFunction as KAGridFunction
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_process_element import RAUserProcess as RAUserProcess
from rocky30.process.eulerian.eulerian_statistics_process import EulerianStatisticsProcessSubject as EulerianStatisticsProcessSubject
from typing import Type

class RAEulerianStatistics(RAUserProcess):
    @classmethod
    def GetWrappedClass(cls) -> Type[EulerianStatisticsProcessSubject]: ...
    @classmethod
    def GetClassName(cls) -> str: ...
    def GetDivisions(self) -> tuple[int, int, int]: ...
    def SetDivisions(self, divisions: tuple[int, int, int]) -> None: ...
    def GetParticleGridFunctionNames(self) -> list[str]: ...
    def GetAvailableOperations(self) -> list[str]: ...
    def CreateEulerianGridFunction(self, operation_name: str, value_name: str, weight_name: Union[str, None] = ...) -> KAGridFunction: ...
