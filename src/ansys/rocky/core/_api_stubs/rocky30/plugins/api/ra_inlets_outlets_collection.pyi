from rocky30.models.input.inlet_type import InletType as InletType
from rocky30.models.input.inlets_outlets_collection import InletsOutletsCollection as InletsOutletsCollection
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_custom_input import RACustomInput as RACustomInput
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_fluid_inlet import RAFluidInlet as RAFluidInlet
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_list import RAList as RAList
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_outlet import RAOutlet as RAOutlet
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_particle_inlet import RAParticleInlet as RAParticleInlet
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_volumetric_inlet import RAVolumetricInlet as RAVolumetricInlet
from ansys.rocky.core._api_stubs.rocky30.plugins.api.rocky_api_deprecated_decorator import ApiDeprecated as ApiDeprecated
from rocky30.plugins.inlets_outlets.actions.inlets_outlets_action import CreateInletOutletAction as CreateInletOutletAction

class RAInletsOutletsCollection(RAList[RAParticleInlet]):
    @classmethod
    def GetWrappedClass(self): ...
    @classmethod
    def GetClassName(self): ...
    def New(self): ...
    def AddContinuousInjection(self) -> RAParticleInlet: ...
    def AddParticleInlet(self) -> RAParticleInlet: ...
    def AddOutlet(self) -> RAOutlet: ...
    def AddVolumeFill(self) -> RAVolumetricInlet: ...
    def AddVolumetricInlet(self) -> RAVolumetricInlet: ...
    def AddCustomInput(self) -> RACustomInput: ...
    def AddFluidInlet(self) -> RAFluidInlet: ...
    def GetParticleInputNames(self): ...
    def GetParticleInput(self, input_name): ...
