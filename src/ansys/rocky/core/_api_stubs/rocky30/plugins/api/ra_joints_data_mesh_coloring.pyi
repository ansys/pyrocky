from coilib50.element_function.semantic_association import SemanticAssociation as SemanticAssociation
from coilib50.subject import Subject as Subject
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_mesh_coloring import ColorType as ColorType, RAMeshColoring as RAMeshColoring

class RAJointsDataMeshColoring:
    def __init__(self, id: str) -> None: ...
    def GetSubject(self) -> Subject: ...
    def SetVisible(self, value: bool) -> None: ...
    def GetVisible(self) -> bool: ...
    def GetValidColoringModes(self) -> list[str]: ...
    def GetAvailableGridFunctionsNames(self) -> set[str]: ...
    def GetAvailableGridFunctions(self) -> set[type['SemanticAssociation']]: ...
    def SetStride(self, value: int) -> None: ...
    def GetStride(self) -> int: ...
    def SetJointsVisible(self, value: bool) -> None: ...
    def GetJointsVisible(self) -> bool: ...
    def SetJointsColor(self, values: ColorType) -> None: ...
    def GetJointsColor(self) -> ColorType: ...
    def SetJointsProperty(self, value: Union[type['SemanticAssociation'], str, None]) -> None: ...
    def GetJointsProperty(self) -> Union[type['SemanticAssociation'], None]: ...
    def SetJointsPointSize(self, value: float) -> None: ...
    def GetJointsPointSize(self) -> float: ...
    def SetJointsConnectivityVisible(self, value: bool) -> None: ...
    def GetJointsConnectivityVisible(self) -> bool: ...
    def SetJointsConnectivityColor(self, values: ColorType) -> None: ...
    def GetJointsConnectivityColor(self) -> ColorType: ...
    def SetJointsConnectivityProperty(self, value: Union[type['SemanticAssociation'], str, None]) -> None: ...
    def GetJointsConnectivityProperty(self) -> Union[type['SemanticAssociation'], None]: ...
    def SetJointsConnectivityLineWidth(self, value: float) -> None: ...
    def GetJointsConnectivityLineWidth(self) -> float: ...
