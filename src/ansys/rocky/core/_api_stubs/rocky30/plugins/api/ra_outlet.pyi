from ansys.rocky.core._api_stubs.plugins10.plugins.api.api_element_item import ApiElementItem
from rocky30.models.input.outlet import Outlet as Outlet
from typing import Optional, Union

class RAOutlet(ApiElementItem):
    @classmethod
    def GetWrappedClass(self): ...
    @classmethod
    def GetClassName(self) -> str: ...
    def GetEnabledForParticles(self) -> bool: ...
    def SetEnabledForParticles(self, value: bool) -> None: ...
    def GetEnabledForSph(self) -> bool: ...
    def SetEnabledForSph(self, value: bool) -> None: ...
    def GetName(self) -> str: ...
    def SetName(self, value: str) -> None: ...
    def GetPressure(self, unit: Optional[str] = ...) -> float: ...
    def SetPressure(self, value: Union[str, float], unit: Optional[str] = ...) -> None: ...
    def GetPrescribedPressureEnabled(self) -> bool: ...
    def SetPrescribedPressureEnabled(self, value: bool) -> None: ...
    def EnablePrescribedPressure(self) -> None: ...
    def DisablePrescribedPressure(self) -> None: ...
    def IsPrescribedPressureEnabled(self) -> bool: ...
    def GetExitPoint(self): ...
    def SetExitPoint(self, value) -> None: ...
    def GetAvailableExitPoints(self): ...
