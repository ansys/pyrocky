from _typeshed import Incomplete
from coilib50.time.time_step import TimeStep
from petroapp10.plugins.entities.petroapp10_project import Petroapp10Project
from ansys.rocky.core._api_stubs.plugins10.plugins.api.api_element_item import ApiElementItem
from rocky30.models.study.study import Study as Study
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_grid_process_element import RAGridProcessElementItem as RAGridProcessElementItem
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_input_variables import RAInputVariables as RAInputVariables
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_parametric_variables import RAParametricVariables as RAParametricVariables
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_study import RAStudy as RAStudy
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_time_filter import RATimeFilter as RATimeFilter
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_user_process_collection import RAUserProcessCollection as RAUserProcessCollection
from typing import Type, Union

RATimeOrIndex = Union[TimeStep, int]

class RAProject(ApiElementItem):
    def __init__(self) -> None: ...
    def CloseProject(self, check_save_state: bool = ...) -> None: ...
    def SaveProject(self, filename: Union[str, None] = ...) -> None: ...
    def SaveProjectForRestart(self, filename: str, timestep_or_index: Union[RATimeOrIndex, None] = ...) -> None: ...
    def GetProjectFilename(self) -> str: ...
    @classmethod
    def GetWrappedClass(self) -> Type['Petroapp10Project']: ...
    @classmethod
    def GetClassName(self) -> str: ...
    def CreateStudy(self, study_name: Union[str, None] = ...) -> RAStudy: ...
    def GetStudyNames(self) -> list[str]: ...
    def GetStudy(self, study_name: Union[str, None] = ...) -> Union[RAStudy, None]: ...
    @classmethod
    def GetModelStudy(cls, model_item): ...
    def GetModelElement(self, model_element_id): ...
    def GetUserProcessCollection(self) -> Union[RAUserProcessCollection, None]: ...
    def GetUserProcess(self, process_name): ...
    def GetTimeFilter(self) -> Union[RATimeFilter, None]: ...
    def GetParametricVariables(self) -> RAParametricVariables: ...
    def GetInputVariables(self) -> RAInputVariables: ...
    def RemoveProcess(self, process: Union[RAGridProcessElementItem, str]) -> None: ...
    def GetElementNames(self, type_name: Incomplete | None = ...): ...
    def GetElement(self, element_name: Incomplete | None = ..., type_name: Incomplete | None = ..., raise_if_no_found: bool = ...): ...
