from collections.abc import Sequence
from rocky30.base_types import Tuple3F as Tuple3F
from rocky30.core.geometry.rocky_document_constants import UNIT_PLANE_ANGLE as UNIT_PLANE_ANGLE
from rocky30.models.geometry.custom_geometry import CustomGeometry as CustomGeometry
from ansys.rocky.core._api_stubs.rocky30.plugins.api._ra_orientation_mixin import _RAOrientationMixin
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_api import RockyApiError as RockyApiError
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_base_geometry import RABaseGeometry as RABaseGeometry
from typing import List, Optional, Union

class RASurface(RABaseGeometry, _RAOrientationMixin):
    @classmethod
    def GetWrappedClass(self) -> type[object]: ...
    @classmethod
    def GetClassName(self) -> str: ...
    def HasMotionFrame(self) -> bool: ...
    def GetTranslation(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetTranslation(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
    def GetInvertNormal(self) -> bool: ...
    def SetInvertNormal(self, value: bool) -> None: ...
    def GetName(self) -> str: ...
    def SetName(self, value: str) -> None: ...
    def GetPivotPoint(self, unit: Optional[str] = ...) -> List[float]: ...
    def SetPivotPoint(self, values: Sequence[Union[str, float]], unit: Optional[str] = ...) -> None: ...
