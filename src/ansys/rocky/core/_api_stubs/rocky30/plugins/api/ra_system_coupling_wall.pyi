from ansys.rocky.core._api_stubs.rocky30.plugins.api.motion._with_movement_mixin import _WithMovementMixin
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_base_geometry import RABaseGeometry as RABaseGeometry
from rocky30.process.geometry.system_coupling_wall import SystemCouplingWall as SystemCouplingWall
from typing import List, Optional, Union

class RASystemCouplingWall(RABaseGeometry, _WithMovementMixin):
    @classmethod
    def GetWrappedClass(self) -> type[object]: ...
    @classmethod
    def GetClassName(self) -> str: ...
    def HasMotionFrame(self) -> bool: ...
    def GetName(self) -> str: ...
    def SetName(self, value: str) -> None: ...
    def GetSphBoundaryType(self) -> str: ...
    def SetSphBoundaryType(self, value: str) -> None: ...
    def GetValidSphBoundaryTypeValues(self) -> List[str]: ...
    def GetStructuralCouplingTypeEnabled(self) -> bool: ...
    def SetStructuralCouplingTypeEnabled(self, value: bool) -> None: ...
    def EnableStructuralCouplingType(self) -> None: ...
    def DisableStructuralCouplingType(self) -> None: ...
    def IsStructuralCouplingTypeEnabled(self) -> bool: ...
    def GetSurfaceTensionContactAngle(self, unit: Optional[str] = ...) -> float: ...
    def SetSurfaceTensionContactAngle(self, value: Union[str, float], unit: Optional[str] = ...) -> None: ...
    def GetThermalCouplingTypeEnabled(self) -> bool: ...
    def SetThermalCouplingTypeEnabled(self, value: bool) -> None: ...
    def EnableThermalCouplingType(self) -> None: ...
    def DisableThermalCouplingType(self) -> None: ...
    def IsThermalCouplingTypeEnabled(self) -> bool: ...
    def GetTriangleSize(self, unit: Optional[str] = ...) -> float: ...
    def SetTriangleSize(self, value: Union[str, float], unit: Optional[str] = ...) -> None: ...
    def GetMaterial(self): ...
    def SetMaterial(self, value) -> None: ...
    def GetAvailableMaterials(self): ...
