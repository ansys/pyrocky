from _typeshed import Incomplete
from coilib50.process import Process as Process
from ansys.rocky.core._api_stubs.plugins10.plugins.api.api_element_item import ApiElementItem
from rocky30.models.rocky_model_type import MatchModelType as MatchModelType, RockyModelTypeEnum as RockyModelTypeEnum
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_api import RockyApiError as RockyApiError
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_process_element import RAPolyhedronProcess as RAPolyhedronProcess, RASurfaceUserProcess as RASurfaceUserProcess
from ansys.rocky.core._api_stubs.rocky30.plugins.api.ra_streamlines_user_process import RAStreamlinesUserProcess as RAStreamlinesUserProcess
from ansys.rocky.core._api_stubs.rocky30.plugins.api.rocky_api_deprecated_decorator import ApiDeprecated as ApiDeprecated

class RAUserProcessCollection(ApiElementItem):
    @classmethod
    def GetWrappedClass(self): ...
    @classmethod
    def GetClassName(self): ...
    def GetProcessNames(self): ...
    def GetProcess(self, process_name): ...
    def CreatePlaneProcess(self, parent, name: Incomplete | None = ..., origin: Incomplete | None = ..., normal: Incomplete | None = ..., plane_type: Incomplete | None = ..., plane_mode: Incomplete | None = ...): ...
    def CreateInspectorProcess(self, parent, name: Incomplete | None = ...): ...
    def GetPlaneProcessNames(self): ...
    def GetInspectorProcessNames(self): ...
    def CreateCubeProcess(self, parent, name: Incomplete | None = ..., center: Incomplete | None = ..., magnitude: Incomplete | None = ..., rotation: Incomplete | None = ...): ...
    def GetCubeProcessNames(self): ...
    def GetTrajectoryProcessNames(self): ...
    def CreateCylinderProcess(self, parent, name: Incomplete | None = ..., center: Incomplete | None = ..., size: Incomplete | None = ..., rotation: Incomplete | None = ..., internal_factor: Incomplete | None = ..., initial_angle: Incomplete | None = ..., final_angle: Incomplete | None = ...): ...
    def CreateParticleTimeSelectionProcess(self, parent, range_definition: str = ..., initial: int = ..., final: int = ..., unit: str = ...): ...
    def CreateTrajectoryProcess(self, parent, starting_timestep: Incomplete | None = ..., number_timesteps: Incomplete | None = ..., particle_stride: Incomplete | None = ...): ...
    def GetCylinderProcessNames(self): ...
    def GetParticleTimeSelectionProcessNames(self): ...
    def CreateEulerianStatistics(self, parent, name: Incomplete | None = ..., divisions: Incomplete | None = ...): ...
    def GetEulerianStatisticsNames(self): ...
    def CreateFilterProcess(self, parent, name: Incomplete | None = ...): ...
    def CreatePropertyProcess(self, parent, name: Incomplete | None = ...): ...
    def GetFilterProcessNames(self): ...
    def GetPropertyProcessNames(self): ...
    def CreatePolyhedronProcess(self, parent: ApiElementItem, stl_filename: str, name: Union[str, None] = ..., import_scale: float = ..., convert_yz: bool = ...) -> Union[RAPolyhedronProcess, None]: ...
    def GetPolyhedronProcessNames(self): ...
    def CreateSurfaceUserProcess(self, parent: ApiElementItem, stl_filename: str, name: Union[str, None] = ..., import_scale: float = ..., convert_yz: bool = ...) -> Union[RASurfaceUserProcess, None]: ...
    def GetSurfaceUserProcessNames(self) -> list[str]: ...
    def CreateParticleToContactProcess(self, parent, name: Incomplete | None = ...): ...
    def CreateContactToParticleProcess(self, parent, name: Incomplete | None = ...): ...
    def GetParticleToContactProcessNames(self): ...
    def GetContactToParticleProcessNames(self): ...
    def CreateStreamlinesUserProcess(self, parent: ApiElementItem, name: Union[str, None] = ...) -> Union[RAStreamlinesUserProcess, None]: ...
    def GetStreamlinesUserProcessNames(self) -> list[str]: ...
