.. py:class:: RAParticleAssemblyPart(id: str, model_id: Optional[str] = ...)


   Bases: :py:obj:`ansys.rocky.core._api_stubs.plugins10.plugins.api.api_element_item.ApiElementItem`

   .. py:method:: GetWrappedClass() -> type[rocky30.models.particle.particle_assembly.ParticleAssemblyPart]
      :classmethod:


   .. py:method:: GetClassName()
      :classmethod:


   .. py:method:: GetAngle(unit: Optional[str] = ...) -> float


   .. py:method:: SetAngle(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetPositionX(unit: Optional[str] = ...) -> float


   .. py:method:: SetPositionX(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetPositionY(unit: Optional[str] = ...) -> float


   .. py:method:: SetPositionY(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetPositionZ(unit: Optional[str] = ...) -> float


   .. py:method:: SetPositionZ(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetRotationX(unit: Optional[str] = ...) -> float


   .. py:method:: SetRotationX(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetRotationY(unit: Optional[str] = ...) -> float


   .. py:method:: SetRotationY(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetRotationZ(unit: Optional[str] = ...) -> float


   .. py:method:: SetRotationZ(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetScale(unit: Optional[str] = ...) -> float


   .. py:method:: SetScale(value: Union[str, float], unit: Optional[str] = ...) -> None


   .. py:method:: GetParticle()


   .. py:method:: SetParticle(value) -> None


   .. py:method:: GetAvailableParticles()


