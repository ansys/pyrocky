:py:mod:`ansys.rocky.core.serializers`
======================================

.. py:module:: ansys.rocky.core.serializers

.. autoapi-nested-parse::

   Module that defines the ``ApiElementProxy`` classes, which acts as a proxy for a
   Rocky application internal objects.

   ..
       !! processed by numpydoc !!


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   ansys.rocky.core.serializers.register_proxies
   ansys.rocky.core.serializers.deserialize_api_element
   ansys.rocky.core.serializers.deserialize_api_list
   ansys.rocky.core.serializers.deserialize_api_grid_function
   ansys.rocky.core.serializers.deserialize_api_exporttoolkit
   ansys.rocky.core.serializers.deserialize_api_error
   ansys.rocky.core.serializers.deserialize_numpy



.. py:function:: register_proxies() -> None


.. py:function:: deserialize_api_element(classname: str, serialized: dict) -> ansys.rocky.core.rocky_api_proxies.ApiElementProxy

   
   Deserialize the proxy objects for the API element.


   :Parameters:

       **serialized** : :class:`python:dict`
           Dictionary of serialized objects.

       **classname** : :class:`python:str`
           Name of the class to deserialize. This parameter is required by the
           superclass but is not used.



   :Returns:

       :obj:`ApiElementProxy`
           Deserialized object.











   ..
       !! processed by numpydoc !!

.. py:function:: deserialize_api_list(classname: str, serialized: dict) -> ansys.rocky.core.rocky_api_proxies.ApiListProxy

   
   Deserialize the proxy objects for the API list element.


   :Parameters:

       **serialized** : :class:`python:dict`
           Dictionary of serialized objects.

       **classname** : :class:`python:str`
           Name of the class to deserialize. This parameter is required by the
           superclass but is not used.



   :Returns:

       :obj:`ApiListProxy`
           Deserialized object.











   ..
       !! processed by numpydoc !!

.. py:function:: deserialize_api_grid_function(classname: str, serialized: dict) -> ansys.rocky.core.rocky_api_proxies.ApiGridFunctionProxy

   
   Deserialize the proxy objects for the API grid function.


   :Parameters:

       **classname** : :class:`python:str`
           Name of the class to deserialize. This parameter is required by the
           superclass but is not used.

       **serialized** : :class:`python:dict`
           Dictionary of serialized objects.



   :Returns:

       :obj:`ApiGridFunctionProxy`
           Deserialized object.











   ..
       !! processed by numpydoc !!

.. py:function:: deserialize_api_exporttoolkit(classname: str, serialized: dict) -> ansys.rocky.core.rocky_api_proxies.ApiExportToolkitProxy

   
   Deserialize the proxy objects for the API element.


   :Parameters:

       **classname** : :class:`python:str`
           Name of the class to deserialize. This parameter is required by the
           superclass but is not used.

       **serialized** : :class:`python:dict`
           Dictionary of serialized objects.



   :Returns:

       :obj:`ApiExportToolkitProxy`
           Deserialized object.











   ..
       !! processed by numpydoc !!

.. py:function:: deserialize_api_error(classname: str, serialized: dict) -> Exception

   
   Deserialize an API error.


   :Parameters:

       **classname** : :class:`python:str`
           Name of the class to deserialize. This parameter is required by the superclass
           but is not used.

       **serialized** : :class:`python:dict`
           Dictionary of the serialized object.



   :Returns:

       :obj:`RockyApiError`
           Error in the serialized object.











   ..
       !! processed by numpydoc !!

.. py:function:: deserialize_numpy(classname: str, serialized: dict) -> Any

   
   Deserialize a numpy array.


   :Parameters:

       **classname** : :class:`python:str`
           Name of the class to deserialize. This parameter is required by the
           superclass but is not used.

       **serialized** : :class:`python:dict`
           Dictionary of the serialized object.



   :Returns:

       :obj:`Any`
           Deserialized object.











   ..
       !! processed by numpydoc !!

